{"version":3,"file":"static/js/public.1cf906f.js","sources":["webpack:///./src/lib/utils/utils.js"],"sourcesContent":["/* eslint-disable */\nconst detectUa = function () {\n  var _this = this;\n  var regs = {\n    // 系统\n    'android': /android/i,\n\n    // 机型\n    'iphone': /iphone/i,\n    'ipad': /ipad/i,\n    'ipod': /ipod/i,\n\n    // 环境\n    'weixin': /micromessenger/i,\n    'mqq': /mqq/i,\n\n    // 浏览器\n    'chrome': /chrome\\//i,\n\n    // 端内\n    'zhidao': / Zhidao/i\n  };\n  var ret = {};\n  var ua = window.navigator.userAgent;\n  for (var i in regs) {\n    var item = regs[i];\n    ret[i] = item.test(ua);\n  }\n\n  ret.ios = ret.iphone || ret.ipad || ret.iphone;\n\n  ret.mobile = ret.ios || ret.android;\n  ret.pc = !ret.mobile;\n\n\n  if (window.chrome) {\n    ret.chrome = true;\n  }\n\n  return ret;\n}\n\n/**\n * 环境判断\n */\nexport const is = (strs) => {\n  var _this = this;\n  var str = strs.split(\",\");\n  var ua = detectUa();\n  //根据链式表达式检查UA\n  function check(rote) {\n    if (!rote) {\n      return false;\n    }\n    //按照点.分割\n    var rotes = rote.split(\".\");\n    var ret = true;\n    var i;\n    for (i = 0; i < rotes.length; i++) {\n      var item = rotes[i];\n      if (!ua[item]) {\n        ret = false;\n        break;\n      }\n    }\n    return ret;\n  };\n\n  var ret = false;\n\n  for (var i = 0; i < str.length; i++) {\n    var item = str[i];\n    if (check(item)) {\n      ret = true;\n      break;\n    }\n  }\n\n  return ret;\n}\n\n/** \n * 获取URL参数\n */\nexport const getQueryParams = (url) => {\n  var url = url ? url : window.location;\n  if (!url) return;\n\n  var searchString = url.search.slice(1);\n  var searchArr = decodeURI(searchString).split('&');\n  var searchParams = {};\n  searchArr.forEach(function (item, index) {\n    var tempArr = item.split('=');\n    searchParams[tempArr[0]] = tempArr[1];\n  })\n  return searchParams;\n  // var\n}\n/**\n * FormData\n */\nexport const isFormData = (val) => {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * 参数转对象\n */\nexport const queryParamsToObj = (queryParams) => {\n  let arr = queryParams.split(\"&\");\n  let paramObj = {};\n  arr.forEach((item, index) => {\n    let data = item.split(\"=\");\n    paramObj[data[0]] = data[1];\n  })\n  return paramObj;\n}\n\n/**\n * 获取URL指定参数\n */\nexport const getQueryString = (name) => {\n  var reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\", \"i\");\n  var r = decodeURIComponent(window.location.search.substr(1)).match(reg);\n  if (r != null) return unescape(r[2]);\n  return null;\n}\n\n/**\n * 处理端上公共参数\n */\nexport const serializeParams = (query) => {\n  var serializeQuery = query || null;\n  var publicParams = \"\";\n  var _tempArr = [];\n\n  if (serializeQuery) {\n    serializeQuery = typeof serializeQuery == 'string' ? JSON.parse(serializeQuery) : serializeQuery;\n  }\n  var hasown = Object.prototype.hasOwnProperty.call(serializeQuery);\n\n  for (var item in serializeQuery) {\n    if (serializeQuery.hasOwnProperty(item)) {\n      _tempArr.push(item + \"=\" + serializeQuery[item]);\n    }\n  }\n\n  publicParams = _tempArr.join('&');\n  return publicParams;\n}\n\n/**\n * \n * @param {*} c_name \n * @param {*} value \n * @param {*} expiremMinutes \n */\nexport const setCookie = (c_name, value, expiremMinutes) => {\n  var exdate = new Date();\n  exdate.setTime(exdate.getTime() + expiremMinutes * 60 * 1000);\n  document.cookie = c_name + \"=\" + escape(value) + ((expiremMinutes == null) ? \"\" : \";expires=\" + exdate.toGMTString());\n};\n\n/**\n * \n * @param {*} c_name \n */\nexport const getCookie = (c_name) => {\n  if (document.cookie.length > 0) {\n    var c_start = document.cookie.indexOf(c_name + \"=\");\n    if (c_start != -1) {\n      c_start = c_start + c_name.length + 1;\n      var c_end = document.cookie.indexOf(\";\", c_start);\n      if (c_end == -1)\n        c_end = document.cookie.length\n      return unescape(document.cookie.substring(c_start, c_end))\n    }\n  }\n  return \"\"\n};\n\n/**\n * \n * @param {*} c_name \n */\nexport const delCookie = (c_name) => {\n  var exp = new Date();\n  exp.setTime(exp.getTime() - 1);\n  var cval = getCookie(c_name);\n  if (cval != null) {\n    document.cookie = c_name + \"=\" + cval + \";expires=\" + exp.toGMTString();\n  }\n};\n\n/**\n * 设置sessionStorage,\n * @param {*} name  存储名称\n * @param {*} content  存储的值，不需要json 化\n */\nexport const setStore = (name, content) => {\n  if (!name) return;\n  if (typeof content !== 'string') {\n    content = JSON.stringify(content);\n  }\n  window.sessionStorage.setItem(name, content);\n}\n\n/**\n * 获取sessionStorage\n */\nexport const getStore = (name) => {\n  if (!name) return;\n  return window.sessionStorage.getItem(name);\n}\n\n/**\n * 删除sessionStorage\n */\nexport const removeStore = (name) => {\n  if (!name) return;\n  window.sessionStorage.removeItem(name);\n}\n\n\n/**\n *  日期 => YYYY—MM-DD\n *  参数(无, YYYY-MM-DD, 时间戳)\n */\nfunction add0(value) {\n  return value < 10 ? '0' + value : value\n}\nexport const getFormatDate = (__time) => {\n  let time = __time || new Date();\n  let date = new Date(time);\n  let year = date.getFullYear();\n  let month = date.getMonth() + 1;\n  let day = date.getDate();\n  let hour = date.getHours();\n  let minute = date.getMinutes();\n  let second = date.getSeconds();\n  // let fillDate = year + '-' + add0(month) + '-' + add0(day);\n  // let fillDate = year + '-' + add0(month) + '-' + add0(day)+' '+ add0(hour) +':'+ add0(minute) +':'+ add0(second); \n  let fillDate = add0(minute) + ':' + add0(second);\n  return fillDate;\n}\n/* eslint-disable */\n"],"mappings":"AAyHA","sourceRoot":""}